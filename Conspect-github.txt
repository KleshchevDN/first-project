## GitHub
— платформа, которая работает с Git и упрощает командное взаимодействие.
[GitHub](https://github.com/)
Регистрация на GitHub:  
1. Введите адрес электронной почты (англ. Enter your email).  
2. Придумайте пароль (англ. Create a password).  
3. Введите имя пользователя (англ. Enter a username).  

----

## Создать репозиторий. 
На вкладке Repositories (англ. «репозитории»), нажать на зелёную кнопку New (англ. «новый») справа.  
Назовите его first-project. Название удалённого репозитория необязательно должно совпадать с именем папки проекта на компьютере  

## Генерируем SSH-ключ.
$ cd ~ # перешли в домашнюю директорию  
$ ls -la .ssh/ # вывели список созданных ключей  
Если ключей ранее не было создано (нет в данной папке):

## Инструкция по генерации SSH-ключа
$ ssh-keygen -t ed25519 -C "электронная почта, к которой привязан ваш аккаунт на GitHub"  
Укажите место хранения ключей.  
Программа запросит кодовую фразу (необязательно)  
$ ls -la .ssh/ # проверить, что ключи действительно сгенерировались

После выполнения команды ssh-keygen из предыдущего урока в директории ~/.ssh будет создано два файла — id_ed25519 и id_ed25519.pub (или id_rsa и id_rsa.pub — в зависимости от того, какой алгоритм вы использовали):  
id_ed25519/id_rsa — приватный ключ (файл без .pub в конце). Ни в коем случае не копируйте его и не делитесь им.  
id_ed25519.pub/id_rsa.pub — публичный ключ (на это указывает расширение .pub).  

## Привязываем SSH-ключ к GitHub
$ clip < ~/.ssh/id_ed25519.pub # cкопируйте содержимое файла с публичным ключом в буфер обмена.  
Перейдите на GitHub и выберите пункт Settings (англ. «настройки») в меню аккаунта.  
В меню слева нажмите на пункт SSH and GPG keys.  
В открывшейся вкладке выберите New SSH key (англ. «новый SSH-ключ»).  
В поле Title (англ. «заголовок») напишите название ключа. Например, Personal key (англ. «личный ключ»).  
В поле Key type (англ. «тип ключа») должно быть Authentication Key (англ. «ключ аутентификации»).  
В поле Key скопируйте ваш ключ из буфера обмена.  
Нажмите на кнопку Add SSH key (англ. «добавить SSH-ключ»).  
$ ssh -T git@github.com # проверить правильность ключа  
ответ:  
Hi %ВАШ_АККАУНТ%! You've successfully authenticated, but GitHub does not provide shell access.  

## Привязать удалённый репозиторий к локальному
Перейдите на страницу удалённого репозитория, выберите тип SSH и скопируйте URL (кнопка справа)  
далее:
$ cd ~/dev/first-project # перейдите в каталог локального репозитория
$ git remote add origin git@github.com:%ИМЯ_АККАУНТА%/first-project.git # Команде необходимо передать два параметра: имя удалённого репозитория и его URL. В качестве имени используйте слово origin. А URL вы скопировали со страницы удалённого репозитория.  
$ git remote -v # ответ:  
origin    git@github.com:%ИМЯ_АККАУНТА%/%ИМЯ-ПРОЕКТА%.git (fetch)  
origin    git@github.com:%ИМЯ_АККАУНТА%/%ИМЯ-ПРОЕКТА%.git (push)  

## Синхронизируем локальный и удалённый репозитории
$ git push -u origin main # Отправить изменения на удалённый репозиторий  
При взаимодействии с удалёнными репозиториями Git выводит в консоль отладочную информацию: количество объектов (файлов), которые отправляются на сервер, информацию о прогрессе сжатия и записи и так далее.
Если вы указывали кодовую фразу при настройке SSH-ключей, её нужно будет ввести.
Зайдите в репозиторий first-project на GitHub. Вы увидите, что в репозитории появились файлы с изменениями.  
В дальнейшем при работе с удалённым репозиторием флаг -u можно опустить и писать просто git push.  

